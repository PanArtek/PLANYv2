---
import { NAVIGATION, SITE_CONFIG } from '../../utils/constants';
import Button from '../ui/Button.astro';
---

<nav class="navbar fixed top-0 left-0 right-0 z-50 transition-all duration-300" id="navbar">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex items-center justify-between h-16 lg:h-20">
      
      <!-- Logo PLANY -->
      <div class="flex items-center">
        <a href="/" class="flex items-center group" aria-label="PLANY - Strona główna">
          <div class="logo-container relative">
            <h1 class="logo-text text-3xl lg:text-4xl font-bold text-gradient-primary tracking-tight">
              PLANY
            </h1>
            <div class="logo-underline absolute bottom-0 left-0 h-1 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full transition-all duration-500 ease-out transform scale-x-0 group-hover:scale-x-100"></div>
          </div>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden lg:flex items-center space-x-8">
        {NAVIGATION.map((item) => (
          <a 
            href={item.href} 
            class="nav-link text-slate-600 hover:text-slate-900 font-medium transition-colors duration-300 relative group"
            data-section={item.href.replace('#', '')}
          >
            {item.label}
            <span class="nav-indicator absolute -bottom-1 left-0 w-0 h-0.5 bg-gradient-to-r from-indigo-500 to-purple-600 group-hover:w-full transition-all duration-300"></span>
          </a>
        ))}
      </div>

      <!-- CTA Button & Mobile Menu -->
      <div class="flex items-center space-x-4">
        <!-- CTA Button (Desktop) -->
        <div class="hidden lg:block">
          <Button 
            variant="primary" 
            size="medium"
            href="#kontakt"
            class="cta-nav"
          >
            Wycena projektów
          </Button>
        </div>

        <!-- Mobile Menu Button -->
        <button 
          class="lg:hidden mobile-menu-button p-2 rounded-lg hover:bg-slate-100 transition-colors duration-300"
          id="mobileMenuButton"
          aria-label="Toggle navigation menu"
          aria-expanded="false"
        >
          <svg class="w-6 h-6 text-slate-600" id="menuIcon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
          <svg class="w-6 h-6 text-slate-600 hidden" id="closeIcon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div class="mobile-menu lg:hidden hidden" id="mobileMenu">
    <div class="mobile-menu-backdrop fixed inset-0 bg-black/20 backdrop-blur-sm"></div>
    <div class="mobile-menu-panel absolute top-full left-0 right-0 bg-white/90 backdrop-blur-lg border-t border-slate-200/50 shadow-xl">
      <div class="container mx-auto px-4 py-6">
        <div class="space-y-4">
          {NAVIGATION.map((item) => (
            <a 
              href={item.href} 
              class="mobile-nav-link block py-3 px-4 text-slate-700 hover:text-slate-900 hover:bg-slate-50/50 rounded-lg font-medium transition-all duration-300"
              data-section={item.href.replace('#', '')}
            >
              {item.label}
            </a>
          ))}
          <div class="pt-4 border-t border-slate-200">
            <Button 
              variant="primary" 
              size="large"
              href="#kontakt"
              class="w-full mobile-cta"
            >
              Otrzymaj wycenę
            </Button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Scroll Progress Indicator -->
  <div class="scroll-progress fixed top-0 left-0 h-1 bg-gradient-to-r from-indigo-500 to-purple-600 z-50 transition-all duration-150" style="width: 0%"></div>
</nav>

<style>
  /* Glassmorphism navigation */
  .navbar {
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
  }

  .navbar.scrolled {
    background: rgba(255, 255, 255, 0.95);
    border-bottom: 1px solid rgba(226, 232, 240, 0.5);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }

  /* Logo animations */
  .logo-container {
    position: relative;
  }
  
  .logo-text {
    background: linear-gradient(135deg, #3B82F6 0%, #8B5CF6 50%, #EC4899 100%);
    background-size: 200% 200%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    animation: gradientShift 3s ease-in-out infinite;
    position: relative;
  }
  
  .logo-underline {
    width: 100%;
    transform-origin: left;
  }
  
  @keyframes gradientShift {
    0%, 100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }

  /* Navigation link active states */
  .nav-link.active {
    color: #3730a3;
  }

  .nav-link.active .nav-indicator {
    width: 100%;
  }

  /* Mobile menu animations */
  .mobile-menu.open {
    display: block;
    animation: slideDown 0.3s ease-out;
  }

  .mobile-menu.closing {
    animation: slideUp 0.3s ease-in;
  }

  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideUp {
    from {
      opacity: 1;
      transform: translateY(0);
    }
    to {
      opacity: 0;
      transform: translateY(-10px);
    }
  }

  /* Scroll progress bar animation */
  .scroll-progress {
    transform-origin: left;
  }

  /* Custom scrollbar for mobile menu */
  .mobile-menu-panel {
    scrollbar-width: thin;
    scrollbar-color: rgba(99, 102, 241, 0.3) transparent;
  }

  .mobile-menu-panel::-webkit-scrollbar {
    width: 4px;
  }

  .mobile-menu-panel::-webkit-scrollbar-track {
    background: transparent;
  }

  .mobile-menu-panel::-webkit-scrollbar-thumb {
    background: rgba(99, 102, 241, 0.3);
    border-radius: 2px;
  }

  /* Focus styles for accessibility */
  .nav-link:focus,
  .mobile-nav-link:focus,
  .mobile-menu-button:focus {
    outline: 2px solid #6366f1;
    outline-offset: 2px;
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .navbar,
    .nav-link,
    .mobile-menu,
    .logo-icon,
    .scroll-progress {
      transition: none;
      animation: none;
    }
  }
</style>

<script type="module">
  // Navigation functionality
  function initNavigation() {
    const navbar = document.getElementById('navbar');
    const mobileMenuButton = document.getElementById('mobileMenuButton');
    const mobileMenu = document.getElementById('mobileMenu');
    const menuIcon = document.getElementById('menuIcon');
    const closeIcon = document.getElementById('closeIcon');
    const scrollProgress = document.querySelector('.scroll-progress');
    const navLinks = document.querySelectorAll('.nav-link, .mobile-nav-link');

    if (!navbar || !mobileMenuButton || !mobileMenu) return;

    // Scroll effects
    let lastScrollY = window.scrollY;
    
    function updateNavbar() {
      const currentScrollY = window.scrollY;
      
      // Glassmorphism effect on scroll
      if (currentScrollY > 50) {
        navbar.classList.add('scrolled');
      } else {
        navbar.classList.remove('scrolled');
      }

      // Update scroll progress
      if (scrollProgress) {
        const scrollPercent = (currentScrollY / (document.documentElement.scrollHeight - window.innerHeight)) * 100;
        scrollProgress.style.width = `${Math.min(scrollPercent, 100)}%`;
      }

      lastScrollY = currentScrollY;
    }

    // Mobile menu toggle
    let isMenuOpen = false;
    
    function toggleMobileMenu() {
      isMenuOpen = !isMenuOpen;
      
      if (isMenuOpen) {
        mobileMenu.classList.remove('hidden');
        mobileMenu.classList.add('open');
        menuIcon.classList.add('hidden');
        closeIcon.classList.remove('hidden');
        mobileMenuButton.setAttribute('aria-expanded', 'true');
        
        // Prevent body scroll
        document.body.style.overflow = 'hidden';
      } else {
        mobileMenu.classList.add('closing');
        menuIcon.classList.remove('hidden');
        closeIcon.classList.add('hidden');
        mobileMenuButton.setAttribute('aria-expanded', 'false');
        
        setTimeout(() => {
          mobileMenu.classList.add('hidden');
          mobileMenu.classList.remove('open', 'closing');
        }, 300);
        
        // Restore body scroll
        document.body.style.overflow = '';
      }
    }

    // Active section highlighting
    function updateActiveSection() {
      const sections = document.querySelectorAll('section[id]');
      const scrollPosition = window.scrollY + 100;

      sections.forEach(section => {
        const sectionTop = section.offsetTop;
        const sectionHeight = section.offsetHeight;
        const sectionId = section.getAttribute('id');

        if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
          // Update active nav link
          navLinks.forEach(link => {
            link.classList.remove('active');
            if (link.getAttribute('data-section') === sectionId) {
              link.classList.add('active');
            }
          });
        }
      });
    }

    // Event listeners
    window.addEventListener('scroll', () => {
      updateNavbar();
      updateActiveSection();
    }, { passive: true });

    mobileMenuButton.addEventListener('click', toggleMobileMenu);

    // Close mobile menu on link click
    navLinks.forEach(link => {
      link.addEventListener('click', () => {
        if (isMenuOpen) {
          toggleMobileMenu();
        }
      });
    });

    // Close mobile menu on backdrop click
    mobileMenu.addEventListener('click', (e) => {
      if (e.target.classList.contains('mobile-menu-backdrop')) {
        toggleMobileMenu();
      }
    });

    // Close mobile menu on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && isMenuOpen) {
        toggleMobileMenu();
      }
    });

    // Initialize
    updateNavbar();
    updateActiveSection();
  }

  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initNavigation);
  } else {
    initNavigation();
  }
</script>